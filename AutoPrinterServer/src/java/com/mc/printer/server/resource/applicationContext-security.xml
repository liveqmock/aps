<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <security:http pattern="/deploy" security="none" />
    <security:http pattern="/service/open" security="none" />
    <security:http pattern="/service/toppage" security="none" />
    <security:http pattern="/service/logout/clear" security="none" />
    <security:http auto-config="true" access-denied-page="/view/denied.jsp">
        <!-- intercept-url:拦截器,可以设定哪些路径需要哪些权限来访问. filters=none 不使用过滤,也可以理解为忽略 -->
        <!--        <security:intercept-url pattern="/service/**" access="ROLE_ADMIN,ROLE_BRANCH,ROLE_USER"  />-->
        <!-- <security:intercept-url pattern="/view/**" access="ROLE_ADMIN"  /> -->
        <security:intercept-url pattern="/service/admin/role" access="ROLE_ADMIN"  />
        <security:intercept-url pattern="/service/admin/dep" access="ROLE_ADMIN"  />
        <security:intercept-url pattern="/service/admin/user" access="ROLE_ADMIN"  />
        <security:intercept-url pattern="/service/admin/tool" access="ROLE_ADMIN"  />
        <security:intercept-url pattern="/service/admin/deploy" access="ROLE_ADMIN"  />
        <security:intercept-url pattern="/service/admin/branch" access="ROLE_ADMIN,ROLE_BRANCH"  />
        <!-- session-management是针对session的管理. 这里可以不配置. 如有需求可以配置. -->
        <!-- id登陆唯一. 后登陆的账号会挤掉第一次登陆的账号 error-if-maximum-exceeded="true" 禁止2次登陆; 
        session-fixation-protection="none" 防止伪造sessionid攻击. 用户登录成功后会销毁用户当前的session. 
        创建新的session,并把用户信息复制到新session中. -->
        <security:session-management
            session-fixation-protection="none">
            <security:concurrency-control />
        </security:session-management>

        <!-- login-page:默认指定的登录页面. authentication-failure-url:出错后跳转页面. default-target-url:成功登陆后跳转页面 -->
        <security:form-login login-page="/service/toppage"
                             authentication-failure-url="/service/toppage?type=1" default-target-url="/service/main"  always-use-default-target="true" username-parameter="j_username" password-parameter="j_password" login-processing-url="/j_spring_security_check"/>
        <!-- logout-success-url:成功注销后跳转到的页面; -->
        <security:logout logout-success-url="/service/toppage" />
        <security:http-basic />

    </security:http>


    <!-- It is responsible for validating the user's credentials -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider
            ref="authenticationProvider">
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="authenticationProvider" class="com.mc.printer.server.service.emp.McUserDetailsService">
        <property name="userDetailsService" ref="userDetailsService" />
        <property name="passwordEncoder" ref="passwordEncoder" />
        <property name="saltSource" ref="saltSource" />     <!-- 注入加密盐 -->
    </bean>

    <bean id="saltSource"
          class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <property name="userPropertyToUse" value="getUsername" />
    </bean>

    <bean
        class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"
        id="passwordEncoder" />

    <bean class="com.mc.printer.server.service.emp.LoginUserDetailsServiceImpl"
          id="userDetailsService" />

</beans>
